openapi: 3.0.4
info:
  title: Sticker Award Service
  version: v1
paths:
  /api/awards/v1/assignments/{userId}:
    get:
      tags:
        - StickerAssignments
      description: Get stickers assigned to a user (access controlled based on caller identity)
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the user whose stickers to retrieve
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserStickersResponse'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - StickerAssignments
      description: Assign a new sticker to a user (access controlled based on caller identity)
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the user to assign the sticker to
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignStickerCommand'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StickerAssignmentResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/awards/v1/assignments/{userId}/{stickerId}:
    delete:
      tags:
        - StickerAssignments
      description: Remove a sticker assignment from a user (access controlled based on caller identity)
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the user to remove the sticker from
        - name: stickerId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the sticker to remove
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StickerRemovalResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  # Sticker catalog endpoints (separate domain)
  /api/stickers/v1:
    get:
      tags:
        - StickerCatalogs
      description: Get all stickers in the catalog
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 0
          description: Page number (0-based)
        - name: size
          in: query
          required: false
          schema:
            type: integer
            default: 20
          description: Number of items per page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StickerCatalogResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - StickerCatalogs
      description: Create a new sticker in the catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStickerCommand'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StickerCreatedResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'

  /api/stickers/v1/{stickerId}:
    get:
      tags:
        - StickerCatalogs
      description: Get a specific sticker's metadata
      parameters:
        - name: stickerId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the sticker to retrieve
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StickerMetadata'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - StickerCatalogs
      description: Update a sticker's metadata
      parameters:
        - name: stickerId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the sticker to update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStickerCommand'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StickerMetadata'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - StickerCatalogs
      description: Delete a sticker from the catalog. A sticker can only be deleted if it is not assigned to anyone.
      parameters:
        - name: stickerId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the sticker to delete
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'

  /api/stickers/v1/{stickerId}/image:
    get:
      tags:
        - StickerCatalogs
      description: Get the sticker image
      parameters:
        - name: stickerId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the sticker whose image to retrieve
      responses:
        '200':
          description: OK
          content:
            image/png:
              schema:
                type: string
                format: binary
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - StickerCatalogs
      description: Upload or update the sticker image
      parameters:
        - name: stickerId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the sticker to update the image for
      requestBody:
        content:
          image/png:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StickerImageUploadResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'

  /health:
    get:
      tags:
        - Health
      description: Check service health
      responses:
        '200':
          description: Service is healthy
components:
  schemas:
    AssignStickerCommand:
      type: object
      properties:
        stickerId:
          type: string
          nullable: false
        reason:
          type: string
          nullable: true
      required:
        - stickerId
      additionalProperties: false
    StickerAssignmentDTO:
      type: object
      properties:
        stickerId:
          type: string
          nullable: false
        assignedAt:
          type: string
          format: date-time
        reason:
          type: string
          nullable: true
      additionalProperties: false
      description: Award assignment data - only contains assignment info with sticker reference
    UserStickersResponse:
      type: object
      properties:
        userId:
          type: string
          nullable: false
        stickers:
          type: array
          items:
            $ref: '#/components/schemas/StickerAssignmentDTO'
      additionalProperties: false
    StickerAssignmentResponse:
      type: object
      properties:
        userId:
          type: string
          nullable: false
        stickerId:
          type: string
          nullable: false
        assignedAt:
          type: string
          format: date-time
      additionalProperties: false
    StickerRemovalResponse:
      type: object
      properties:
        userId:
          type: string
          nullable: false
        stickerId:
          type: string
          nullable: false
        removedAt:
          type: string
          format: date-time
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: {}

    # New sticker catalog schemas
    CreateStickerCommand:
      type: object
      properties:
        stickerName:
          type: string
          nullable: false
        stickerDescription:
          type: string
          nullable: true
        stickerQuantityRemaining:
          type: integer
          nullable: false
          description: Quantity remaining (-1 for infinite)
      required:
        - stickerName
        - stickerQuantityRemaining
      additionalProperties: false

    UpdateStickerCommand:
      type: object
      properties:
        stickerName:
          type: string
          nullable: true
        stickerDescription:
          type: string
          nullable: true
        stickerQuantityRemaining:
          type: integer
          nullable: true
          description: Quantity remaining (-1 for infinite)
      additionalProperties: false

    StickerMetadata:
      type: object
      properties:
        stickerId:
          type: string
          nullable: false
        stickerName:
          type: string
          nullable: false
        stickerDescription:
          type: string
          nullable: true
        stickerQuantityRemaining:
          type: integer
          nullable: false
          description: Quantity remaining (-1 for infinite)
        imageUrl:
          type: string
          nullable: true
          description: URL to the sticker image resource
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      additionalProperties: false

    StickerCreatedResponse:
      type: object
      properties:
        stickerId:
          type: string
          nullable: false
        stickerName:
          type: string
          nullable: false
        imageUrl:
          type: string
          nullable: true
      additionalProperties: false

    PagedResponse:
      type: object
      properties:
        page:
          type: integer
          description: Current page number (0-based)
        size:
          type: integer
          description: Number of items per page
        total:
          type: integer
          description: Total number of items
        totalPages:
          type: integer
          description: Total number of pages
      additionalProperties: false

    StickerCatalogResponse:
      type: object
      properties:
        stickers:
          type: array
          items:
            $ref: '#/components/schemas/StickerMetadata'
        pagination:
          $ref: '#/components/schemas/PagedResponse'
      additionalProperties: false

    StickerImageUploadResponse:
      type: object
      properties:
        stickerId:
          type: string
          nullable: false
        imageUrl:
          type: string
          nullable: false
        uploadedAt:
          type: string
          format: date-time
      additionalProperties: false

    UserAssignment:
      type: object
      properties:
        userId:
          type: string
          nullable: false
        assignedAt:
          type: string
          format: date-time
        reason:
          type: string
          nullable: true
      additionalProperties: false

    StickerAssignmentsResponse:
      type: object
      properties:
        stickerId:
          type: string
          nullable: false
        assignments:
          type: array
          items:
            $ref: '#/components/schemas/UserAssignment'
        pagination:
          $ref: '#/components/schemas/PagedResponse'
      additionalProperties: false

