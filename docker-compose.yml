version: '3.8'

# Stickerlandia Service Endpoints
# -------------------------------
# - Sticker Award API:      http://localhost:8080/api/award
#   - User stickers:        http://localhost:8080/api/award/v1/users/user-001/stickers
# 
# - User Management API:    http://localhost:8080/api/user-management
#   - Registration:         http://localhost:8080/api/user-management/api/users/v1/register
#   - Login:                http://localhost:8080/api/user-management/api/users/v1/login
#
# - Traefik Dashboard:      http://localhost:8081/dashboard/
# - Redpanda Console:       http://localhost:8082
#
services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    ports:
      - "8080:80"     # App traffic
      - "8081:8080"   # Dashboard
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --entrypoints.web.address=:80
      - --entrypoints.dashboard.address=:8081
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=PathPrefix(`/dashboard`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=dashboard"

  redpanda:
    image: redpandadata/redpanda:latest
    container_name: stickerlandia-redpanda
    command:
      - redpanda
      - start
      - --smp=1
      - --memory=1G
      - --reserve-memory=0M
      - --overprovisioned
      - --node-id=0
      - --check=false
      - --pandaproxy-addr=0.0.0.0:8082
      - --advertise-pandaproxy-addr=redpanda:8082
      - --kafka-addr=0.0.0.0:9092
      - --advertise-kafka-addr=redpanda:9092
      - --rpc-addr=0.0.0.0:33145
      - --advertise-rpc-addr=redpanda:33145
      - --mode dev-container
    ports:
      - "9092:9092"
      # - "8082:8082"
      - "9644:9644"
    volumes:
      - redpanda-data:/var/lib/redpanda/data
    healthcheck:
      test: ["CMD", "rpk", "cluster", "health"]
      interval: 10s
      timeout: 5s
      retries: 5

  redpanda-init:
    image: redpandadata/redpanda:latest
    container_name: redpanda-init
    depends_on:
      redpanda:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "rpk topic create users.userRegistered.v1 users.stickerClaimed.v1 users.userDetailsUpdated.v1 --brokers redpanda:9092"
    restart: "no"

  redpanda-console:
    image: redpandadata/console:latest
    container_name: stickerlandia-redpanda-console
    depends_on:
      redpanda:
        condition: service_healthy
    ports:
      - "8082:8080"
    environment:
      KAFKA_BROKERS: redpanda:9092
      # REDPANDA_ADMIN_API_URLS: http://redpanda:9644
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080"]
      interval: 10s
      timeout: 5s
      retries: 5

  sticker-award-db:
    image: postgres:16
    container_name: sticker-award-db
    environment:
      POSTGRES_DB: sticker_award
      POSTGRES_USER: sticker_user
      POSTGRES_PASSWORD: sticker_password
    ports:
      - "5432:5432"
    volumes:
      - sticker-award-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sticker_user -d sticker_award"]
      interval: 5s
      timeout: 5s
      retries: 5

  user-management-db:
    image: postgres:16
    container_name: user-management-db
    environment:
      POSTGRES_DB: user_management
      POSTGRES_USER: user_mgmt_user
      POSTGRES_PASSWORD: user_mgmt_password
    ports:
      - "5433:5432"
    volumes:
      - user-management-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user_mgmt_user -d user_management"]
      interval: 5s
      timeout: 5s
      retries: 5

  sticker-award:
    build:
      context: ./sticker-award
      dockerfile: src/main/docker/Dockerfile.jvmlocal
    container_name: sticker-award
    depends_on:
      sticker-award-db:
        condition: service_healthy
      redpanda:
        condition: service_healthy
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://sticker-award-db:5432/sticker_award
      QUARKUS_DATASOURCE_USERNAME: sticker_user
      QUARKUS_DATASOURCE_PASSWORD: sticker_password
      QUARKUS_DATASOURCE_DB_KIND: postgresql
      QUARKUS_DATASOURCE_DEVSERVICES_ENABLED: "false"
      KAFKA_BOOTSTRAP_SERVERS: redpanda:9092
      MP_MESSAGING_CONNECTOR_SMALLRYE_KAFKA_BOOTSTRAP_SERVERS: redpanda:9092
      QUARKUS_KAFKA_STREAMS_BOOTSTRAP_SERVERS: redpanda:9092
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sticker-award.rule=PathPrefix(`/api/award`)"
      - "traefik.http.services.sticker-award.loadbalancer.server.port=8080"

  user-management:
    build:
      context: ./user-management
      dockerfile: src/Stickerlandia.UserManagement.AspNet/Dockerfile
    container_name: user-management
    depends_on:
      user-management-db:
        condition: service_healthy
      redpanda:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DRIVING: ASPNET
      DRIVEN: AGNOSTIC
      ConnectionStrings__messaging: "redpanda:9092"
      ConnectionStrings__database: "Host=user-management-db;Port=5432;Database=user_management;Username=user_mgmt_user;Password=user_mgmt_password"
      KAFKA__BOOTSTRAPSERVERS: "redpanda:9092"
      KAFKA__SCHEMAREGISTRY: "http://redpanda:8082"
      KAFKA__GROUPID: "stickerlandia-user-management"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user-management.rule=PathPrefix(`/api/users`)"
      - "traefik.http.services.user-management.loadbalancer.server.port=8080"

volumes:
  sticker-award-data:
  user-management-data:
  redpanda-data:
